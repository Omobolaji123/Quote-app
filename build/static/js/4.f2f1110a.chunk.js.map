{"version":3,"sources":["components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/NewCommentForm.module.css","components/quotes/HighlightedQuote.module.css","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/Quote.js"],"names":["module","exports","CommentItem","props","className","classes","item","text","CommentsList","comments","map","comment","id","NewCommentForm","commentTextRef","useRef","submitFormHandler","event","preventDefault","current","value","onAddComment","form","onSubmit","control","htmlFor","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","useHttp","addComment","sendRequest","status","error","getAllComments","fetchComments","fetchStatus","fetchError","data","quoteId","useEffect","content","content2","LoadingSpinner","length","onClick","commentData","HighlightedQuote","quote","author","Quote","match","useRouteMatch","useParams","getSingleQuote","getThisQuote","path","exact","to","url"],"mappings":"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","file":"static/js/4.f2f1110a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__3Ti0S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__3t4Hp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__frT2f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__1IfsI\",\"loading\":\"NewCommentForm_loading__mczCA\",\"control\":\"NewCommentForm_control__2_ifT\",\"actions\":\"NewCommentForm_actions__P-_jZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote___c81X\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.comment} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useRef } from 'react';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n    const comment = commentTextRef.current.value;\n    props.onAddComment(comment);\n  }; \n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useEffect, useState } from 'react';\nimport classes from './Comments.module.css';\nimport CommentsList from \"./CommentsList\";\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { addComment,getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nconst Comments = (props) => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const {sendRequest,status,error} = useHttp(addComment);\n  const {sendRequest:fetchComments,status:fetchStatus,error:fetchError,data} = useHttp(getAllComments,true);\n  const {quoteId} = props;\n  useEffect(()=>{\n    if (!isAddingComment){\n      fetchComments(quoteId);\n    }\n  },[fetchComments,quoteId,isAddingComment])\n  useEffect(()=>{\n    if (status === \"completed\" && !error){\n      setIsAddingComment(false);\n    }\n  },[status,error])\n  const addCommentHandler = (comment)=>{\n    const commentData = {\n      comment:comment,\n      quoteId:props.quoteId\n    }\n    sendRequest(commentData);\n  }\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  let content;\n  if (fetchStatus === \"pending\"){\n    content = <LoadingSpinner />\n  }\n  if (fetchStatus === \"completed\" && fetchError){\n    content =  <p className=\"centered\">{fetchError}</p>\n  }\n  if (fetchStatus === \"completed\" && !fetchError && data?.length>0){\n    content =  <CommentsList comments={data}/>\n  }\n  if (fetchStatus === \"completed\" && !fetchError && data?.length===0){\n    content =  <p className=\"centered\">No comments yet.</p>\n  }\n\n  let content2;\n\n  if (status === \"pending\"){\n    content2 =  <LoadingSpinner />;\n  }\n  if (status === \"completed\" && error){\n    content2 =  <p className=\"centered\">{error}</p>\n  }  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm onAddComment={addCommentHandler} />}\n      {content2}\n      {content}\n    </section>\n  );\n};\n\nexport default Comments;\n","import { Fragment } from \"react\";\nimport classes from \"./HighlightedQuote.module.css\";\n\nconst HighlightedQuote = (props) => {\n  return (\n    <Fragment>\n      <figure className={classes.quote}>\n        <p>{props.text}</p>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n    </Fragment>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment, useEffect } from \"react\";\r\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nconst Quote = () => {\r\n  const match = useRouteMatch();\r\n  const { quoteId } = useParams();\r\n  const {sendRequest:getThisQuote,status,data:quote,error} = useHttp(getSingleQuote,true);\r\n  useEffect(()=>{\r\n    getThisQuote(quoteId);\r\n  },[getThisQuote,quoteId]);\r\n  if (status === \"pending\"){\r\n    return <LoadingSpinner />\r\n  }\r\n  if (error){\r\n    return <p className=\"centered\">{error}</p>\r\n  }\r\n  if (!quote.text){\r\n    return <p className=\"centered\">No quote found!</p>\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote author={quote.author} text={quote.text} />\r\n      <Route path={match.path} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n            Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments quoteId={quoteId}/>\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Quote;\r\n"],"sourceRoot":""}